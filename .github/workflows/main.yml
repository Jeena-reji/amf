# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Canonical Ltd.
# Copyright 2024 Intel Corporation

name: Main workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

  release:
    types:
      - created
      

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: go build -o ./build/my-binary 

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: make docker-build

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: WillAbides/setup-go-faster@v1.14.0
        with:
          go-version-file: 'go.mod'

      - uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: latest
          install-go: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1
        with:
          version: latest
          args: -v --config ./.golangci.yml

  hadolint:
    name: hadolint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Dockerfile linter
        uses: hadolint/hadolint-action@v3.1.0
        # For now, ignoring:
        # DL3008 warning: Pin versions in apt get install (e.g., apt-get install <package>=<version>); and
        # DL3018 warning: Pin versions in apk add (e.g., apk add <package>=<version>)
        with:
          dockerfile: Dockerfile
          ignore: DL3008,DL3018

  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: reuse lint
        uses: fsfe/reuse-action@v4

  fossa-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: FOSSA scan
        uses: fossa-contrib/fossa-action@v3
        with:
          fossa-api-key: 0c3bbcdf20e157bbd487dae173751b28

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Unit tests
        run: go test ./...
  create-release:
    # New job for creating a release
    needs: [build, docker-build, staticcheck, lint, hadolint, license-check, fossa-check, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build the package for release
        run: |
          mkdir -p release_assets
          cp ./build/my-binary release_assets/

      - name: Compress release assets
        run: tar -czf release_assets.tar.gz -C release_assets .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated minor release based on workflow completion"
          files: release_assets.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

  

  
 
  
       
      
        
          



