# SPDX-License-Identifier: Apache-2.0
# Copyright 2023 Canonical Ltd.
# Copyright 2024 Intel Corporation

name: Main workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: go build
          

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.PACKAGE_REPOSITORY }}/myapp:${{ env.RELEASE_VERSION }} .
          make docker-build

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: WillAbides/setup-go-faster@v1.14.0
        with:
          go-version-file: 'go.mod'

      - uses: dominikh/staticcheck-action@v1.3.1
        with:
          version: latest
          install-go: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1
        with:
          version: latest
          args: -v --config ./.golangci.yml

  hadolint:
    name: hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Dockerfile linter
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          ignore: DL3008,DL3018

  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: reuse lint
        uses: fsfe/reuse-action@v4

  fossa-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: FOSSA scan
        uses: fossa-contrib/fossa-action@v3
        with:
          fossa-api-key: 0c3bbcdf20e157bbd487dae173751b28

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Unit tests
        run: go test ./...

  create-release:
    # This job will now depend on all previous jobs, including the package build and push job
    needs: [build, docker-build, staticcheck, lint, hadolint, license-check, fossa-check, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated minor release based on workflow completion"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-push-packages:
    runs-on: ubuntu-latest
    needs: [create-release]  

    env:
      PACKAGE_REGISTRY: ghcr.io
      PACKAGE_REPOSITORY: ios-mcn-core
      RELEASE_VERSION: 0.0.7

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set Git SHA
        run: echo GIT_SHA_SHORT=$(git rev-parse --short HEAD) >> $GITHUB_ENV

      - name: Clean Checksum
        run: go mod tidy

      - name: Build Docker image 
        run: |
         go build -o myapp  
         docker build -t ghcr.io/${{ env.PACKAGE_REPOSITORY }}/myapp:${{ env.RELEASE_VERSION }} .


    

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCR_END }}


     

     
            
      -  name: Push Docker image latest to Github Container Registry
         run: |
            docker push ghcr.io/${{ env.PACKAGE_REPOSITORY }}/myapp:${{ env.RELEASE_VERSION }}
            make docker-push


  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read  
      packages: write  
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker image
        env:
          REGISTRY: ghcr.io
          DOCKER_REGISTRY: ghcr.io/
          DOCKER_REPOSITORY: ios-mcn-core
          RELEASE_VERSION: 0.0.7
          DOCKER_TAG: release-${{ env.RELEASE_VERSION }}
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.PACKAGE_REPOSITORY }}/myapp:${{ env.DOCKER_TAG }} .
          make docker-build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCR_END }}

      - name: Push Docker image latest to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ env.PACKAGE_REPOSITORY }}/myapp:${{ env.DOCKER_TAG }}
          make docker-push
